!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
CLOSESOCKET	header.h	37;"	d
CLOSESOCKET	header.h	40;"	d
DEBUG_STATUS	header.h	31;"	d
GLOBAL_VAR	sendbox.h	/^    }GLOBAL_VAR;$/;"	t	typeref:struct:__anon1
MODULE_BIN	makefile	/^MODULE_BIN := $(notdir $(CURRENT_DIR))$/;"	m
MODULE_BIN	makefile	/^MODULE_BIN := $/;"	m
MODULE_LIB_SHARED	makefile	/^MODULE_LIB_SHARED := $(addprefix lib, $(addsuffix .so, $(MODULE_BIN)))$/;"	m
MODULE_LIB_SHARED	makefile	/^MODULE_LIB_SHARED :=$/;"	m
MODULE_LIB_STATIC	makefile	/^MODULE_LIB_STATIC := $(addprefix lib, $(addsuffix .a, $(MODULE_BIN)))$/;"	m
MODULE_LIB_STATIC	makefile	/^MODULE_LIB_STATIC :=$/;"	m
OUT_INC_DIR	makefile	/^OUT_INC_DIR =$/;"	m
OUT_INC_FILE	makefile	/^OUT_INC_FILE = $/;"	m
PERROR	header.h	38;"	d
PERROR	header.h	42;"	d
SERVER_PORT	sendbox.c	4;"	d	file:
SK_BUILD_BIN	makefile	/^SK_BUILD_BIN	= yes$/;"	m
SK_BUILD_LIB	makefile	/^SK_BUILD_LIB	= NO$/;"	m
SLEEP	header.h	36;"	d
SLEEP	header.h	41;"	d
SUB_DIRS	makefile	/^SUB_DIRS :=$/;"	m
_HEADER_H_	header.h	2;"	d
_SENDBOX_H_	sendbox.h	3;"	d
__anon1::msgq_id	sendbox.h	/^        char * msgq_id;$/;"	m	struct:__anon1	access:public
__anon1::mutex_id	sendbox.h	/^        char * mutex_id;$/;"	m	struct:__anon1	access:public
__anon1::sem_id	sendbox.h	/^        char * sem_id;  $/;"	m	struct:__anon1	access:public
__anon1::send_data	sendbox.h	/^        char * send_data;$/;"	m	struct:__anon1	access:public
__anon1::server_addr	sendbox.h	/^        struct sockaddr_in server_addr;$/;"	m	struct:__anon1	typeref:struct:__anon1::sockaddr_in	access:public
__anon1::socket_fd	sendbox.h	/^        int socket_fd;$/;"	m	struct:__anon1	access:public
deinitialization	sendbox.c	/^void deinitialization(GLOBAL_VAR * global_var)$/;"	f	signature:(GLOBAL_VAR * global_var)
deinitialization	sendbox.h	/^    void deinitialization(GLOBAL_VAR * pVar);$/;"	p	signature:(GLOBAL_VAR * pVar)
initialization	sendbox.c	/^GLOBAL_VAR * initialization()$/;"	f
initialization	sendbox.h	/^    GLOBAL_VAR * initialization();$/;"	p	signature:()
main	hello.cpp	/^int main()$/;"	f	signature:()
main	sendbox.c	/^int main(int argc,char * argv[])$/;"	f	signature:(int argc,char * argv[])
main	test_cn.cpp	/^int main(int argc, const char *argv[])$/;"	f	signature:(int argc, const char *argv[])
msgq_id	sendbox.h	/^        char * msgq_id;$/;"	m	struct:__anon1	access:public
mutex_id	sendbox.h	/^        char * mutex_id;$/;"	m	struct:__anon1	access:public
pthread_func	sendbox.c	/^void* pthread_func(void * p_arg)$/;"	f	signature:(void * p_arg)
pthread_func	sendbox.h	/^    void * pthread_func(void *p_arg);$/;"	p	signature:(void *p_arg)
sem_id	sendbox.h	/^        char * sem_id;  $/;"	m	struct:__anon1	access:public
send_data	sendbox.h	/^        char * send_data;$/;"	m	struct:__anon1	access:public
server_addr	sendbox.h	/^        struct sockaddr_in server_addr;$/;"	m	struct:__anon1	typeref:struct:__anon1::sockaddr_in	access:public
socket_fd	sendbox.h	/^        int socket_fd;$/;"	m	struct:__anon1	access:public
socklen_t	header.h	35;"	d
