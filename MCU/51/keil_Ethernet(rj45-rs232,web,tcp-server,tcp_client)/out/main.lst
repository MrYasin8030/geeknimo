C51 COMPILER V9.01   MAIN                                                                  08/23/2013 20:12:41 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\out\main.obj
COMPILER INVOKED BY: D:\Program Files\keil\C51\BIN\C51.EXE app\main.c BROWSE INCDIR(.\app;.\bsp;.\uip) DEBUG OBJECTEXTEN
                    -D PRINT(.\out\main.lst) OBJECT(.\out\main.obj)

line level    source

   1          #include "main.h"
   2          #include "adc.h"
   3          
   4          sbit LED1 = P1^7;
   5          sbit LED2 = P1^6;
   6          
   7          u8 client_connect_flag = 0;
   8          u8 loop_cnt = 1;
   9          u8 i, arptimer;
  10          
  11          void main(void)
  12          { 
  13   1              uart_init();
  14   1              InitADC(); 
  15   1              buffer_Init();
  16   1      
  17   1              for(i=0; i<20; i++) xlog("\r\n");       //clear screen
  18   1      
  19   1          /* Initialise the uIP TCP/IP stack. */
  20   1          uip_init();
  21   1      
  22   1          /* Initialise the device driver. */ 
  23   1          etherdev_init();
  24   1      
  25   1          /* Initialise the ARP cache. */
  26   1          uip_arp_init();
  27   1              
  28   1              
  29   1              /*Initialise listen port */
  30   1              listen_init(); 
  31   1      
  32   1              EA=1;
  33   1              xlog("init ok\r\n");
  34   1      
  35   1      
  36   1          arptimer = 0;
  37   1      
  38   1          while(1)
  39   1          {
  40   2                      if((client_connect_flag == 0) && (loop_cnt++%15 == 0))
  41   2                      {
  42   3                              u16_t ipaddr[2];
  43   3                              struct uip_conn *pcon = NULL;    
  44   3      
  45   3                              uip_ipaddr(ipaddr,192,168,1,2);
  46   3                              pcon = uip_connect(ipaddr,HTONS(8888));
  47   3                              client_connect_flag = 1;
  48   3      
  49   3                              xlog("sync ");
  50   3                      }
  51   2      
  52   2              uip_len = etherdev_read();
  53   2      
  54   2              if(uip_len == 0)
C51 COMPILER V9.01   MAIN                                                                  08/23/2013 20:12:41 PAGE 2   

  55   2              {
  56   3                  for(i = 0; i < UIP_CONNS; i++)
  57   3                  {
  58   4                      uip_periodic(i);
  59   4                      /* If the above function invocation resulted in data that
  60   4                         should be sent out on the network, the global variable
  61   4                         uip_len is set to a value > 0. */
  62   4                      if(uip_len > 0)
  63   4                      {
  64   5                          uip_arp_out();
  65   5                          etherdev_send();
  66   5                      }
  67   4                  }
  68   3      
  69   3                  /* Call the ARP timer function every 10 seconds. */
  70   3                  if(++arptimer == 20)
  71   3                  {   
  72   4                          uip_arp_timer();
  73   4                          arptimer = 0;
  74   4                  }
  75   3              }
  76   2              else /* (uip_len != 0) Process incoming */
  77   2              {
  78   3                  if(BUF->type == htons(UIP_ETHTYPE_IP))
  79   3                  {
  80   4                          uip_arp_ipin();
  81   4                          uip_input();
  82   4                          /* If the above function invocation resulted in data that
  83   4                             should be sent out on the network, the global variable
  84   4                             uip_len is set to a value > 0. */
  85   4                          if(uip_len > 0)
  86   4                      {
  87   5                              uip_arp_out();
  88   5                              etherdev_send();
  89   5                          }
  90   4                  }
  91   3                  else if(BUF->type == htons(UIP_ETHTYPE_ARP))
  92   3                  {
  93   4                          uip_arp_arpin();
  94   4                          /* If the above function invocation resulted in data that
  95   4                             should be sent out on the network, the global variable
  96   4                             uip_len is set to a value > 0. */        
  97   4                          if(uip_len > 0)
  98   4                      {       
  99   5                              etherdev_send();
 100   5                          }
 101   4                  }
 102   3              }       
 103   2          }//while(1)
 104   1          return;
 105   1      }
 106          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    302    ----
   CONSTANT SIZE    =     19    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4       7
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
C51 COMPILER V9.01   MAIN                                                                  08/23/2013 20:12:41 PAGE 3   

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
